

DROP TABLE IF EXISTS events_for_compilation;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS participation_requests;
DROP TABLE IF EXISTS events_views;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS locations;
DROP TABLE IF EXISTS categories;

CREATE TABLE IF NOT EXISTS users (
                                     id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                                     name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

CREATE TABLE IF NOT EXISTS categories (
                                          id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          name VARCHAR(50) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS locations (
                                         id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                         lat FLOAT NOT NULL,
                                         lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
                                      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      title VARCHAR(120) NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    location INTEGER REFERENCES locations (id) ON DELETE CASCADE,
    paid BOOLEAN NOT NULL,
    participant_limit INTEGER NOT NULL,
    category INTEGER REFERENCES categories (id) ON DELETE CASCADE,
    request_moderation BOOLEAN NOT NULL,
    initiator INTEGER REFERENCES users (id) ON DELETE CASCADE,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    state VARCHAR(50)
    );

CREATE TABLE IF NOT EXISTS participation_requests (
                                                      id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                      requester_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    event_id INTEGER REFERENCES events (id) ON DELETE CASCADE,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status VARCHAR(50)
    );

CREATE TABLE IF NOT EXISTS compilations (
                                            id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            title VARCHAR(50),
    pinned BOOLEAN
    );

CREATE TABLE IF NOT EXISTS events_for_compilation (
    compilation_id INTEGER REFERENCES compilations (id) ON DELETE CASCADE,
    event_id INTEGER REFERENCES events (id) ON DELETE CASCADE,
    CONSTRAINT PK_REVIEW PRIMARY KEY (compilation_id, event_id)
    );